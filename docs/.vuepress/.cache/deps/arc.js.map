{
  "version": 3,
  "sources": ["../../../../node_modules/.pnpm/arc@0.1.4/node_modules/arc/arc.js", "../../../../node_modules/.pnpm/arc@0.1.4/node_modules/arc/index.js"],
  "sourcesContent": ["'use strict';\n\nvar D2R = Math.PI / 180;\nvar R2D = 180 / Math.PI;\n\nvar Coord = function(lon,lat) {\n    this.lon = lon;\n    this.lat = lat;\n    this.x = D2R * lon;\n    this.y = D2R * lat;\n};\n\nvar roundCoords = function(coords) {\n    // round coordinate decimal values to 6 places\n    var PRECISION = 6;\n    var MULTIPLIER = Math.pow(10, PRECISION)\n\n    for (var i = 0; i < coords.length; i++) {\n        // https://stackoverflow.com/questions/11832914/how-to-round-to-at-most-2-decimal-places-if-necessary\n        coords[i] = Math.round(\n            (coords[i] + Number.EPSILON) * MULTIPLIER\n        ) / MULTIPLIER\n    }\n\n    return coords;\n}\n\nCoord.prototype.view = function() {\n    return String(this.lon).slice(0, 4) + ',' + String(this.lat).slice(0, 4);\n};\n\nCoord.prototype.antipode = function() {\n    var anti_lat = -1 * this.lat;\n    var anti_lon = (this.lon < 0) ? 180 + this.lon : (180 - this.lon) * -1;\n    return new Coord(anti_lon, anti_lat);\n};\n\nvar LineString = function() {\n    this.coords = [];\n    this.length = 0;\n};\n\nLineString.prototype.move_to = function(coord) {\n    this.length++;\n    this.coords.push(coord);\n};\n\nvar Arc = function(properties) {\n    this.properties = properties || {};\n    this.geometries = [];\n};\n\nArc.prototype.json = function() {\n    if (this.geometries.length <= 0) {\n        return {'geometry': { 'type': 'LineString', 'coordinates': null },\n                'type': 'Feature', 'properties': this.properties\n               };\n    } else if (this.geometries.length == 1) {\n        return {'geometry': { 'type': 'LineString', 'coordinates': this.geometries[0].coords },\n                'type': 'Feature', 'properties': this.properties\n               };\n    } else {\n        var multiline = [];\n        for (var i = 0; i < this.geometries.length; i++) {\n            multiline.push(this.geometries[i].coords);\n        }\n        return {'geometry': { 'type': 'MultiLineString', 'coordinates': multiline },\n                'type': 'Feature', 'properties': this.properties\n               };\n    }\n};\n\n// TODO - output proper multilinestring\nArc.prototype.wkt = function() {\n    var wkt_string = '';\n    var wkt = 'LINESTRING(';\n    var collect = function(c) { wkt += c[0] + ' ' + c[1] + ','; };\n    for (var i = 0; i < this.geometries.length; i++) {\n        if (this.geometries[i].coords.length === 0) {\n            return 'LINESTRING(empty)';\n        } else {\n            var coords = this.geometries[i].coords;\n            coords.forEach(collect);\n            wkt_string += wkt.substring(0, wkt.length - 1) + ')';\n        }\n    }\n    return wkt_string;\n};\n\n/*\n * http://en.wikipedia.org/wiki/Great-circle_distance\n *\n */\nvar GreatCircle = function(start,end,properties) {\n    if (!start || start.x === undefined || start.y === undefined) {\n        throw new Error(\"GreatCircle constructor expects two args: start and end objects with x and y properties\");\n    }\n    if (!end || end.x === undefined || end.y === undefined) {\n        throw new Error(\"GreatCircle constructor expects two args: start and end objects with x and y properties\");\n    }\n    this.start = new Coord(start.x,start.y);\n    this.end = new Coord(end.x,end.y);\n    this.properties = properties || {};\n\n    var w = this.start.x - this.end.x;\n    var h = this.start.y - this.end.y;\n    var z = Math.pow(Math.sin(h / 2.0), 2) +\n                Math.cos(this.start.y) *\n                   Math.cos(this.end.y) *\n                     Math.pow(Math.sin(w / 2.0), 2);\n    this.g = 2.0 * Math.asin(Math.sqrt(z));\n\n    if (this.g == Math.PI) {\n        throw new Error('it appears ' + this.start.view() + ' and ' + this.end.view() + \" are 'antipodal', e.g diametrically opposite, thus there is no single route but rather infinite\");\n    } else if (isNaN(this.g)) {\n        throw new Error('could not calculate great circle between ' + start + ' and ' + end);\n    }\n};\n\n/*\n * http://williams.best.vwh.net/avform.htm#Intermediate\n */\nGreatCircle.prototype.interpolate = function(f) {\n    var A = Math.sin((1 - f) * this.g) / Math.sin(this.g);\n    var B = Math.sin(f * this.g) / Math.sin(this.g);\n    var x = A * Math.cos(this.start.y) * Math.cos(this.start.x) + B * Math.cos(this.end.y) * Math.cos(this.end.x);\n    var y = A * Math.cos(this.start.y) * Math.sin(this.start.x) + B * Math.cos(this.end.y) * Math.sin(this.end.x);\n    var z = A * Math.sin(this.start.y) + B * Math.sin(this.end.y);\n    var lat = R2D * Math.atan2(z, Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2)));\n    var lon = R2D * Math.atan2(y, x);\n    return [lon, lat];\n};\n\n\n\n/*\n * Generate points along the great circle\n */\nGreatCircle.prototype.Arc = function(npoints,options) {\n    var first_pass = [];\n    if (!npoints || npoints <= 2) {\n        first_pass.push([this.start.lon, this.start.lat]);\n        first_pass.push([this.end.lon, this.end.lat]);\n    } else {\n        var delta = 1.0 / (npoints - 1);\n        for (var i = 0; i < npoints; ++i) {\n            var step = delta * i;\n            var pair = this.interpolate(step);\n            first_pass.push(pair);\n        }\n    }\n    /* partial port of dateline handling from:\n      gdal/ogr/ogrgeometryfactory.cpp\n\n      TODO - does not handle all wrapping scenarios yet\n    */\n    var bHasBigDiff = false;\n    var dfMaxSmallDiffLong = 0;\n    // from http://www.gdal.org/ogr2ogr.html\n    // -datelineoffset:\n    // (starting with GDAL 1.10) offset from dateline in degrees (default long. = +/- 10deg, geometries within 170deg to -170deg will be splited)\n    var dfDateLineOffset = options && options.offset ? options.offset : 10;\n    var dfLeftBorderX = 180 - dfDateLineOffset;\n    var dfRightBorderX = -180 + dfDateLineOffset;\n    var dfDiffSpace = 360 - dfDateLineOffset;\n\n    // https://github.com/OSGeo/gdal/blob/7bfb9c452a59aac958bff0c8386b891edf8154ca/gdal/ogr/ogrgeometryfactory.cpp#L2342\n    for (var j = 1; j < first_pass.length; ++j) {\n        var dfPrevX = first_pass[j-1][0];\n        var dfX = first_pass[j][0];\n        var dfDiffLong = Math.abs(dfX - dfPrevX);\n        if (dfDiffLong > dfDiffSpace &&\n            ((dfX > dfLeftBorderX && dfPrevX < dfRightBorderX) || (dfPrevX > dfLeftBorderX && dfX < dfRightBorderX))) {\n            bHasBigDiff = true;\n        } else if (dfDiffLong > dfMaxSmallDiffLong) {\n            dfMaxSmallDiffLong = dfDiffLong;\n        }\n    }\n\n    var poMulti = [];\n    if (bHasBigDiff && dfMaxSmallDiffLong < dfDateLineOffset) {\n        var poNewLS = [];\n        poMulti.push(poNewLS);\n        for (var k = 0; k < first_pass.length; ++k) {\n            var dfX0 = parseFloat(first_pass[k][0]);\n            if (k > 0 &&  Math.abs(dfX0 - first_pass[k-1][0]) > dfDiffSpace) {\n                var dfX1 = parseFloat(first_pass[k-1][0]);\n                var dfY1 = parseFloat(first_pass[k-1][1]);\n                var dfX2 = parseFloat(first_pass[k][0]);\n                var dfY2 = parseFloat(first_pass[k][1]);\n                if (dfX1 > -180 && dfX1 < dfRightBorderX && dfX2 == 180 &&\n                    k+1 < first_pass.length &&\n                   first_pass[k-1][0] > -180 && first_pass[k-1][0] < dfRightBorderX)\n                {\n                     poNewLS.push([-180, first_pass[k][1]]);\n                     k++;\n                     poNewLS.push([first_pass[k][0], first_pass[k][1]]);\n                     continue;\n                } else if (dfX1 > dfLeftBorderX && dfX1 < 180 && dfX2 == -180 &&\n                     k+1 < first_pass.length &&\n                     first_pass[k-1][0] > dfLeftBorderX && first_pass[k-1][0] < 180)\n                {\n                     poNewLS.push([180, first_pass[k][1]]);\n                     k++;\n                     poNewLS.push([first_pass[k][0], first_pass[k][1]]);\n                     continue;\n                }\n\n                if (dfX1 < dfRightBorderX && dfX2 > dfLeftBorderX)\n                {\n                    // swap dfX1, dfX2\n                    var tmpX = dfX1;\n                    dfX1 = dfX2;\n                    dfX2 = tmpX;\n                    // swap dfY1, dfY2\n                    var tmpY = dfY1;\n                    dfY1 = dfY2;\n                    dfY2 = tmpY;\n                }\n                if (dfX1 > dfLeftBorderX && dfX2 < dfRightBorderX) {\n                    dfX2 += 360;\n                }\n\n                if (dfX1 <= 180 && dfX2 >= 180 && dfX1 < dfX2)\n                {\n                    var dfRatio = (180 - dfX1) / (dfX2 - dfX1);\n                    var dfY = dfRatio * dfY2 + (1 - dfRatio) * dfY1;\n                    poNewLS.push([first_pass[k-1][0] > dfLeftBorderX ? 180 : -180, dfY]);\n                    poNewLS = [];\n                    poNewLS.push([first_pass[k-1][0] > dfLeftBorderX ? -180 : 180, dfY]);\n                    poMulti.push(poNewLS);\n                }\n                else\n                {\n                    poNewLS = [];\n                    poMulti.push(poNewLS);\n                }\n                poNewLS.push([dfX0, first_pass[k][1]]);\n            } else {\n                poNewLS.push([first_pass[k][0], first_pass[k][1]]);\n            }\n        }\n    } else {\n        // add normally\n        var poNewLS0 = [];\n        poMulti.push(poNewLS0);\n        for (var l = 0; l < first_pass.length; ++l) {\n            poNewLS0.push([first_pass[l][0],first_pass[l][1]]);\n        }\n    }\n\n    var arc = new Arc(this.properties);\n    for (var m = 0; m < poMulti.length; ++m) {\n        var line = new LineString();\n        arc.geometries.push(line);\n        var points = poMulti[m];\n        for (var j0 = 0; j0 < points.length; ++j0) {\n            line.move_to(roundCoords(points[j0]));\n        }\n    }\n    return arc;\n};\n\nif (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  // nodejs\n  module.exports.Coord = Coord;\n  module.exports.Arc = Arc;\n  module.exports.GreatCircle = GreatCircle;\n\n} else {\n  // browser\n  var arc = {};\n  arc.Coord = Coord;\n  arc.Arc = Arc;\n  arc.GreatCircle = GreatCircle;\n}\n", "module.exports = require('./arc');\n"],
  "mappings": ";;;;;AAAA;AAAA;AAAA;AAEA,QAAI,MAAM,KAAK,KAAK;AACpB,QAAI,MAAM,MAAM,KAAK;AAErB,QAAI,QAAQ,SAAS,KAAI,KAAK;AAC1B,WAAK,MAAM;AACX,WAAK,MAAM;AACX,WAAK,IAAI,MAAM;AACf,WAAK,IAAI,MAAM;AAAA,IACnB;AAEA,QAAI,cAAc,SAAS,QAAQ;AAE/B,UAAI,YAAY;AAChB,UAAI,aAAa,KAAK,IAAI,IAAI,SAAS;AAEvC,eAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AAEpC,eAAO,CAAC,IAAI,KAAK;AAAA,WACZ,OAAO,CAAC,IAAI,OAAO,WAAW;AAAA,QACnC,IAAI;AAAA,MACR;AAEA,aAAO;AAAA,IACX;AAEA,UAAM,UAAU,OAAO,WAAW;AAC9B,aAAO,OAAO,KAAK,GAAG,EAAE,MAAM,GAAG,CAAC,IAAI,MAAM,OAAO,KAAK,GAAG,EAAE,MAAM,GAAG,CAAC;AAAA,IAC3E;AAEA,UAAM,UAAU,WAAW,WAAW;AAClC,UAAI,WAAW,KAAK,KAAK;AACzB,UAAI,WAAY,KAAK,MAAM,IAAK,MAAM,KAAK,OAAO,MAAM,KAAK,OAAO;AACpE,aAAO,IAAI,MAAM,UAAU,QAAQ;AAAA,IACvC;AAEA,QAAI,aAAa,WAAW;AACxB,WAAK,SAAS,CAAC;AACf,WAAK,SAAS;AAAA,IAClB;AAEA,eAAW,UAAU,UAAU,SAAS,OAAO;AAC3C,WAAK;AACL,WAAK,OAAO,KAAK,KAAK;AAAA,IAC1B;AAEA,QAAI,MAAM,SAAS,YAAY;AAC3B,WAAK,aAAa,cAAc,CAAC;AACjC,WAAK,aAAa,CAAC;AAAA,IACvB;AAEA,QAAI,UAAU,OAAO,WAAW;AAC5B,UAAI,KAAK,WAAW,UAAU,GAAG;AAC7B,eAAO;AAAA,UAAC,YAAY,EAAE,QAAQ,cAAc,eAAe,KAAK;AAAA,UACxD,QAAQ;AAAA,UAAW,cAAc,KAAK;AAAA,QACvC;AAAA,MACX,WAAW,KAAK,WAAW,UAAU,GAAG;AACpC,eAAO;AAAA,UAAC,YAAY,EAAE,QAAQ,cAAc,eAAe,KAAK,WAAW,CAAC,EAAE,OAAO;AAAA,UAC7E,QAAQ;AAAA,UAAW,cAAc,KAAK;AAAA,QACvC;AAAA,MACX,OAAO;AACH,YAAI,YAAY,CAAC;AACjB,iBAAS,IAAI,GAAG,IAAI,KAAK,WAAW,QAAQ,KAAK;AAC7C,oBAAU,KAAK,KAAK,WAAW,CAAC,EAAE,MAAM;AAAA,QAC5C;AACA,eAAO;AAAA,UAAC,YAAY,EAAE,QAAQ,mBAAmB,eAAe,UAAU;AAAA,UAClE,QAAQ;AAAA,UAAW,cAAc,KAAK;AAAA,QACvC;AAAA,MACX;AAAA,IACJ;AAGA,QAAI,UAAU,MAAM,WAAW;AAC3B,UAAI,aAAa;AACjB,UAAI,MAAM;AACV,UAAI,UAAU,SAAS,GAAG;AAAE,eAAO,EAAE,CAAC,IAAI,MAAM,EAAE,CAAC,IAAI;AAAA,MAAK;AAC5D,eAAS,IAAI,GAAG,IAAI,KAAK,WAAW,QAAQ,KAAK;AAC7C,YAAI,KAAK,WAAW,CAAC,EAAE,OAAO,WAAW,GAAG;AACxC,iBAAO;AAAA,QACX,OAAO;AACH,cAAI,SAAS,KAAK,WAAW,CAAC,EAAE;AAChC,iBAAO,QAAQ,OAAO;AACtB,wBAAc,IAAI,UAAU,GAAG,IAAI,SAAS,CAAC,IAAI;AAAA,QACrD;AAAA,MACJ;AACA,aAAO;AAAA,IACX;AAMA,QAAI,cAAc,SAAS,OAAM,KAAI,YAAY;AAC7C,UAAI,CAAC,SAAS,MAAM,MAAM,UAAa,MAAM,MAAM,QAAW;AAC1D,cAAM,IAAI,MAAM,yFAAyF;AAAA,MAC7G;AACA,UAAI,CAAC,OAAO,IAAI,MAAM,UAAa,IAAI,MAAM,QAAW;AACpD,cAAM,IAAI,MAAM,yFAAyF;AAAA,MAC7G;AACA,WAAK,QAAQ,IAAI,MAAM,MAAM,GAAE,MAAM,CAAC;AACtC,WAAK,MAAM,IAAI,MAAM,IAAI,GAAE,IAAI,CAAC;AAChC,WAAK,aAAa,cAAc,CAAC;AAEjC,UAAI,IAAI,KAAK,MAAM,IAAI,KAAK,IAAI;AAChC,UAAI,IAAI,KAAK,MAAM,IAAI,KAAK,IAAI;AAChC,UAAI,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,CAAG,GAAG,CAAC,IACzB,KAAK,IAAI,KAAK,MAAM,CAAC,IAClB,KAAK,IAAI,KAAK,IAAI,CAAC,IACjB,KAAK,IAAI,KAAK,IAAI,IAAI,CAAG,GAAG,CAAC;AAC9C,WAAK,IAAI,IAAM,KAAK,KAAK,KAAK,KAAK,CAAC,CAAC;AAErC,UAAI,KAAK,KAAK,KAAK,IAAI;AACnB,cAAM,IAAI,MAAM,gBAAgB,KAAK,MAAM,KAAK,IAAI,UAAU,KAAK,IAAI,KAAK,IAAI,iGAAiG;AAAA,MACrL,WAAW,MAAM,KAAK,CAAC,GAAG;AACtB,cAAM,IAAI,MAAM,8CAA8C,QAAQ,UAAU,GAAG;AAAA,MACvF;AAAA,IACJ;AAKA,gBAAY,UAAU,cAAc,SAAS,GAAG;AAC5C,UAAI,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,CAAC,IAAI,KAAK,IAAI,KAAK,CAAC;AACpD,UAAI,IAAI,KAAK,IAAI,IAAI,KAAK,CAAC,IAAI,KAAK,IAAI,KAAK,CAAC;AAC9C,UAAI,IAAI,IAAI,KAAK,IAAI,KAAK,MAAM,CAAC,IAAI,KAAK,IAAI,KAAK,MAAM,CAAC,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,CAAC,IAAI,KAAK,IAAI,KAAK,IAAI,CAAC;AAC5G,UAAI,IAAI,IAAI,KAAK,IAAI,KAAK,MAAM,CAAC,IAAI,KAAK,IAAI,KAAK,MAAM,CAAC,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,CAAC,IAAI,KAAK,IAAI,KAAK,IAAI,CAAC;AAC5G,UAAI,IAAI,IAAI,KAAK,IAAI,KAAK,MAAM,CAAC,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,CAAC;AAC5D,UAAI,MAAM,MAAM,KAAK,MAAM,GAAG,KAAK,KAAK,KAAK,IAAI,GAAG,CAAC,IAAI,KAAK,IAAI,GAAG,CAAC,CAAC,CAAC;AACxE,UAAI,MAAM,MAAM,KAAK,MAAM,GAAG,CAAC;AAC/B,aAAO,CAAC,KAAK,GAAG;AAAA,IACpB;AAOA,gBAAY,UAAU,MAAM,SAAS,SAAQ,SAAS;AAClD,UAAI,aAAa,CAAC;AAClB,UAAI,CAAC,WAAW,WAAW,GAAG;AAC1B,mBAAW,KAAK,CAAC,KAAK,MAAM,KAAK,KAAK,MAAM,GAAG,CAAC;AAChD,mBAAW,KAAK,CAAC,KAAK,IAAI,KAAK,KAAK,IAAI,GAAG,CAAC;AAAA,MAChD,OAAO;AACH,YAAI,QAAQ,KAAO,UAAU;AAC7B,iBAAS,IAAI,GAAG,IAAI,SAAS,EAAE,GAAG;AAC9B,cAAI,OAAO,QAAQ;AACnB,cAAI,OAAO,KAAK,YAAY,IAAI;AAChC,qBAAW,KAAK,IAAI;AAAA,QACxB;AAAA,MACJ;AAMA,UAAI,cAAc;AAClB,UAAI,qBAAqB;AAIzB,UAAI,mBAAmB,WAAW,QAAQ,SAAS,QAAQ,SAAS;AACpE,UAAI,gBAAgB,MAAM;AAC1B,UAAI,iBAAiB,OAAO;AAC5B,UAAI,cAAc,MAAM;AAGxB,eAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,EAAE,GAAG;AACxC,YAAI,UAAU,WAAW,IAAE,CAAC,EAAE,CAAC;AAC/B,YAAI,MAAM,WAAW,CAAC,EAAE,CAAC;AACzB,YAAI,aAAa,KAAK,IAAI,MAAM,OAAO;AACvC,YAAI,aAAa,gBACX,MAAM,iBAAiB,UAAU,kBAAoB,UAAU,iBAAiB,MAAM,iBAAkB;AAC1G,wBAAc;AAAA,QAClB,WAAW,aAAa,oBAAoB;AACxC,+BAAqB;AAAA,QACzB;AAAA,MACJ;AAEA,UAAI,UAAU,CAAC;AACf,UAAI,eAAe,qBAAqB,kBAAkB;AACtD,YAAI,UAAU,CAAC;AACf,gBAAQ,KAAK,OAAO;AACpB,iBAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,EAAE,GAAG;AACxC,cAAI,OAAO,WAAW,WAAW,CAAC,EAAE,CAAC,CAAC;AACtC,cAAI,IAAI,KAAM,KAAK,IAAI,OAAO,WAAW,IAAE,CAAC,EAAE,CAAC,CAAC,IAAI,aAAa;AAC7D,gBAAI,OAAO,WAAW,WAAW,IAAE,CAAC,EAAE,CAAC,CAAC;AACxC,gBAAI,OAAO,WAAW,WAAW,IAAE,CAAC,EAAE,CAAC,CAAC;AACxC,gBAAI,OAAO,WAAW,WAAW,CAAC,EAAE,CAAC,CAAC;AACtC,gBAAI,OAAO,WAAW,WAAW,CAAC,EAAE,CAAC,CAAC;AACtC,gBAAI,OAAO,QAAQ,OAAO,kBAAkB,QAAQ,OAChD,IAAE,IAAI,WAAW,UAClB,WAAW,IAAE,CAAC,EAAE,CAAC,IAAI,QAAQ,WAAW,IAAE,CAAC,EAAE,CAAC,IAAI,gBACrD;AACK,sBAAQ,KAAK,CAAC,MAAM,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;AACrC;AACA,sBAAQ,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;AACjD;AAAA,YACL,WAAW,OAAO,iBAAiB,OAAO,OAAO,QAAQ,QACpD,IAAE,IAAI,WAAW,UACjB,WAAW,IAAE,CAAC,EAAE,CAAC,IAAI,iBAAiB,WAAW,IAAE,CAAC,EAAE,CAAC,IAAI,KAChE;AACK,sBAAQ,KAAK,CAAC,KAAK,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;AACpC;AACA,sBAAQ,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;AACjD;AAAA,YACL;AAEA,gBAAI,OAAO,kBAAkB,OAAO,eACpC;AAEI,kBAAI,OAAO;AACX,qBAAO;AACP,qBAAO;AAEP,kBAAI,OAAO;AACX,qBAAO;AACP,qBAAO;AAAA,YACX;AACA,gBAAI,OAAO,iBAAiB,OAAO,gBAAgB;AAC/C,sBAAQ;AAAA,YACZ;AAEA,gBAAI,QAAQ,OAAO,QAAQ,OAAO,OAAO,MACzC;AACI,kBAAI,WAAW,MAAM,SAAS,OAAO;AACrC,kBAAI,MAAM,UAAU,QAAQ,IAAI,WAAW;AAC3C,sBAAQ,KAAK,CAAC,WAAW,IAAE,CAAC,EAAE,CAAC,IAAI,gBAAgB,MAAM,MAAM,GAAG,CAAC;AACnE,wBAAU,CAAC;AACX,sBAAQ,KAAK,CAAC,WAAW,IAAE,CAAC,EAAE,CAAC,IAAI,gBAAgB,OAAO,KAAK,GAAG,CAAC;AACnE,sBAAQ,KAAK,OAAO;AAAA,YACxB,OAEA;AACI,wBAAU,CAAC;AACX,sBAAQ,KAAK,OAAO;AAAA,YACxB;AACA,oBAAQ,KAAK,CAAC,MAAM,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;AAAA,UACzC,OAAO;AACH,oBAAQ,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;AAAA,UACrD;AAAA,QACJ;AAAA,MACJ,OAAO;AAEH,YAAI,WAAW,CAAC;AAChB,gBAAQ,KAAK,QAAQ;AACrB,iBAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,EAAE,GAAG;AACxC,mBAAS,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC,GAAE,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;AAAA,QACrD;AAAA,MACJ;AAEA,UAAIA,OAAM,IAAI,IAAI,KAAK,UAAU;AACjC,eAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,EAAE,GAAG;AACrC,YAAI,OAAO,IAAI,WAAW;AAC1B,QAAAA,KAAI,WAAW,KAAK,IAAI;AACxB,YAAI,SAAS,QAAQ,CAAC;AACtB,iBAAS,KAAK,GAAG,KAAK,OAAO,QAAQ,EAAE,IAAI;AACvC,eAAK,QAAQ,YAAY,OAAO,EAAE,CAAC,CAAC;AAAA,QACxC;AAAA,MACJ;AACA,aAAOA;AAAA,IACX;AAEA,QAAI,OAAO,WAAW,eAAe,OAAO,OAAO,YAAY,aAAa;AAE1E,aAAO,QAAQ,QAAQ;AACvB,aAAO,QAAQ,MAAM;AACrB,aAAO,QAAQ,cAAc;AAAA,IAE/B,OAAO;AAED,YAAM,CAAC;AACX,UAAI,QAAQ;AACZ,UAAI,MAAM;AACV,UAAI,cAAc;AAAA,IACpB;AAJM;AAAA;AAAA;;;AC/QN,IAAAC,eAAA;AAAA;AAAA,WAAO,UAAU;AAAA;AAAA;",
  "names": ["arc", "require_arc"]
}
